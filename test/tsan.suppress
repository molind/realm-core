# ThreadSanitizer suppressions file for realm-core

# Avoid a false positive instance of lock-order-inversion.
# SyncManager::m_sessions_mutex and SyncSession::m_state_mutex are locked
# in this order when a SyncSession is created, and in reverse order when
# SyncSession::become_inactive is called. Creating a SyncSession and becoming
# inactive cannot happen at the same time.
deadlock:realm::sync::MigrationStore::create_sentinel_subscription_set
deadlock:realm::sync::MigrationStore::create_subscriptions

# mktime, timegm, gmtime modify global time zone env var, but the race is harmless
race:adjtime

# libuv scheduler is only supposed to be used on main thread but constructed
# on the sync thread for async open task, should be harmless to suppress,
# but ultimately needs to be fixed: #7083
race:uv_async_init

# We try to shut down the remote BaaSaaS instance from inside a signal handler,
# which invovles a bunch of memory allocations. This is a pretty unsafe thing
# to do, but we want to avoid leaking server resources.
signal:realm::Baasaas::stop
